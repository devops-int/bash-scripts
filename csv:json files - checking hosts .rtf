{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue255;\red0\green0\blue0;
\red144\green1\blue18;\red0\green0\blue255;\red101\green76\blue29;\red157\green0\blue210;\red0\green0\blue109;
\red19\green118\blue70;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c100000;\cssrgb\c0\c0\c0;
\cssrgb\c63922\c8235\c8235;\cssrgb\c0\c0\c100000;\cssrgb\c47451\c36863\c14902;\cssrgb\c68627\c0\c85882;\cssrgb\c0\c6275\c50196;
\cssrgb\c3529\c52549\c34510;}
\paperw11900\paperh16840\margl1440\margr1440\vieww26960\viewh15340\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
#!/usr/bin/env bash\cf0 \cb1 \
\cb3 FILE=\cf5 ""\cf0 \cb1 \
\cb3 TYPE=\cf5 ""\cf0 \cb1 \
\cb3 COUNT_OK=0\cb1 \
\cb3 COUNT_NOTOK=0\cb1 \
\cb3 COUNT_OK_JSON=0\cb1 \
\cb3 COUNT_NOTOK_JSON=0\cb1 \
\
\cf6 \cb3 function\cf0  \cf7 check_csv()\{\cf0 \cb1 \
\cb3   \cf8 while\cf0  IFS=, \cf7 read\cf0  -r HOST PORT \cb1 \
\cb3   \cf8 do\cf0  \cb1 \
\cb3     IP=\cf5 $(ping -c 1 \cf9 $HOST\cf0 |\cf5  awk -F '[()]' '/PING/ \{ print $2\}')\cf0 \cb1 \
\cb3     nc -z -w 3 \cf9 $HOST\cf0  \cf9 $PORT\cf0 \cb1 \
\cb3     \cf8 if\cf0  [ \cf9 $?\cf0  -eq 0 ]; \cf8 then\cf0 \cb1 \
\cb3       COUNT_OK=\cf5 $((COUNT_OK \cf0 +\cf5  \cf10 1\cf5 ))\cf0 \cb1 \
\cb3       \cf7 echo\cf0  \cf5 "\cf9 $HOST\cf5  (\cf9 $IP\cf5 ) - OK"\cf0 \cb1 \
\cb3     \cf8 else\cf0 \cb1 \
\cb3       COUNT_NOTOK=\cf5 $((COUNT_NOTOK \cf0 +\cf5  \cf10 1\cf5 ))\cf0 \cb1 \
\cb3       \cf7 echo\cf0  \cf5 "\cf9 $HOST\cf5  (\cf9 $IP\cf5 ) - NOT OK"\cf0     \cb1 \
\cb3     \cf8 fi\cf0            \cb1 \
\cb3   \cf8 done\cf0  < \cf9 $FILE\cf0 \cb1 \
\cb3   \cf7 echo\cf0  \cf5 "TOTAL: \cf9 $COUNT_OK\cf5  OK, \cf9 $COUNT_NOTOK\cf5  NOT OK"\cf0 \cb1 \
\cb3 \}\cb1 \
\
\cf6 \cb3 function\cf0  \cf7 check_json()\{\cf0 \cb1 \
\cb3   count=\cf5 `jq '. | length' \cf9 $FILE\cf5 `\cf0 \cb1 \
\cb3   \cf8 for\cf0  \cf5 ((i\cf0 =\cf10 0\cf5 ; i\cf0 <\cf9 $count\cf5 ; i\cf0 ++\cf5 ))\cf0 ; \cf8 do\cf0 \cb1 \
\cb3       HOST=\cf5 `jq -r '.['\cf9 $i\cf5 '].host' \cf9 $FILE\cf5 `\cf0 \cb1 \
\cb3       PORT=\cf5 `jq -r '.['\cf9 $i\cf5 '].port' \cf9 $FILE\cf5 `\cf0 \cb1 \
\cb3       nc -z -w 3 \cf9 $HOST\cf0  \cf9 $PORT\cf0 \cb1 \
\cb3       \cf8 if\cf0  [ \cf9 $?\cf0  -eq 0 ]; \cf8 then\cf0 \cb1 \
\cb3         COUNT_OK_JSON=\cf5 $((COUNT_OK_JSON \cf0 +\cf5  \cf10 1\cf5 ))\cf0 \cb1 \
\cb3         \cf7 echo\cf0  \cf5 "\cf9 $HOST\cf5  (\cf9 $IP\cf5 ) - OK"\cf0 \cb1 \
\cb3       \cf8 else\cf0 \cb1 \
\cb3         COUNT_NOTOK_JSON=\cf5 $((COUNT_NOTOK_JSON \cf0 +\cf5  \cf10 1\cf5 ))\cf0 \cb1 \
\cb3         \cf7 echo\cf0  \cf5 "\cf9 $HOST\cf5  (\cf9 $IP\cf5 ) - NOT OK"\cf0     \cb1 \
\cb3       \cf8 fi\cf0   \cb1 \
\cb3   \cf8 done\cf0 \cb1 \
\cb3   \cf7 echo\cf0  \cf5 "TOTAL: \cf9 $COUNT_OK_JSON\cf5  OK, \cf9 $COUNT_NOTOK_JSON\cf5  NOT OK"\cf0 \cb1 \
\cb3 \}\cb1 \
\
\cf8 \cb3 while\cf0  \cf7 getopts\cf0  \cf5 "f:t:"\cf0  OPTION; \cf8 do\cf0 \cb1 \
\cb3   \cf8 case\cf0  \cf9 $OPTION\cf0  \cf8 in\cf0 \cb1 \
\cb3     f)\cb1 \
\cb3       FILE=\cf5 "\cf9 $OPTARG\cf5 "\cf0 \cb1 \
\cb3       ;;\cb1 \
\cb3     t)\cb1 \
\cb3       TYPE=\cf5 "\cf9 $OPTARG\cf5 "\cf0 \cb1 \
\cb3       ;;\cb1 \
\cb3     *)\cb1 \
\cb3       \cf7 echo\cf0  \cf5 "Unknown option"\cf0 ;\cb1 \
\cb3       \cf7 exit\cf0  1;;\cb1 \
\cb3   \cf8 esac\cf0 \cb1 \
\cf8 \cb3 done\cf0  \cb1 \
\
\cf8 \cb3 if\cf0  [[ \cf9 $TYPE\cf0  == \cf5 "csv"\cf0  ]] || [[ \cf9 $TYPE\cf0  == \cf5 "CSV"\cf0  ]]; \cf8 then\cf0 \cb1 \
\cb3   \cf7 echo\cf0  \cf5 "Starting the CSV formating"\cf0 \cb1 \
\cb3   check_csv \cb1 \
\cb3   \cf7 exit\cf0  0\cb1 \
\cf8 \cb3 elif\cf0  [[ \cf9 $TYPE\cf0  == \cf5 "json"\cf0  ]] || [[ \cf9 $TYPE\cf0  == \cf5 "JSON"\cf0  ]]; \cf8 then\cf0 \cb1 \
\cb3   \cf7 echo\cf0  \cf5 "Starting the JSON formating"\cf0 \cb1 \
\cb3   check_json\cb1 \
\cb3   \cf7 exit\cf0  0\cb1 \
\cf8 \cb3 else\cf0 \cb1 \
\cb3   \cf7 echo\cf0  \cf5 "Incorrect format of the file"\cf0 \cb1 \
\cf8 \cb3 fi\cf0 \cb1 \
\
\
\
\
\
}